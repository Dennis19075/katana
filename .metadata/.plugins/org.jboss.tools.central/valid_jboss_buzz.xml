<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>The new Tekton Pipelines extension for Visual Studio Code</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/JAbyjcPadUk/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="pipelines" scheme="searchisko:content:tags" /><category term="Tekton" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Denis Golovin</name></author><id>searchisko:content:id:jbossorg_blog-the_new_tekton_pipelines_extension_for_visual_studio_code</id><updated>2020-01-08T08:03:24Z</updated><published>2020-01-08T08:03:24Z</published><content type="html">&lt;p&gt;&lt;a href="https://tekton.dev/"&gt;The Tekton Project&lt;/a&gt;, which was announced in March after branching off from the &lt;a href="https://knative.dev/"&gt;Knative project&lt;/a&gt;, is creating excitement as a &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes-&lt;/a&gt;native CI/CD pipeline tool.&lt;/p&gt; &lt;p&gt;It offers the flexibility and agnosticism that Kubernetes is celebrated for and is positioned to become the first open standardized engine for &lt;a href="https://developers.redhat.com/blog/2019/07/19/getting-started-with-tekton-on-red-hat-openshift/"&gt;executing pipelines&lt;/a&gt;. Although the project is still in the early stages of development, we couldn’t wait to start making it easier for developers to jump on the Tekton train. Therefore in this article, we&amp;#8217;ll take a quick look at the Tekton Pipelines extension and how to use it.&lt;/p&gt; &lt;p&gt;&lt;span id="more-660887"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The initial release of the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-tekton-pipelines"&gt;Visual Studio (VS) Code Tekton Pipelines extension&lt;/a&gt; by Red Hat was developed over the course of a summer internship by &lt;a href="https://github.com/onyiny-ang"&gt;Lindsey Tulloch &lt;/a&gt;with support from developers of the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector extension&lt;/a&gt;, &lt;a href="https://github.com/dgolovin"&gt;Denis Golovin&lt;/a&gt; and &lt;a href="https://github.com/mohitsuman"&gt;Mohit Suman &lt;/a&gt;and the Red Hat Pipelines team—in particular, &lt;a href="https://github.com/vdemeester"&gt;Vincent Demeester&lt;/a&gt; and &lt;a href="https://github.com/sthaha"&gt;Sunil Thaha. &lt;/a&gt;&lt;/p&gt; &lt;p&gt;The extension offers all of the same functionality as the Tekton CLI tool as well as a Pipelines view. This not only allows developers to visualize pipeline deployments they&amp;#8217;re developing but also allows for intuitive interaction with pipeline resources.&lt;/p&gt; &lt;p&gt;Today, the extension is available on &lt;a href="https://marketplace.visualstudio.com/vscode"&gt;VSCode Marketplace&lt;/a&gt; and works with the latest version of VSCode.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Supported Features:&lt;/b&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Snippets for Pipeline Resources&lt;/li&gt; &lt;li&gt;Pipeline View&lt;/li&gt; &lt;li&gt;CLI functionality implemented via clicking on the desired pipeline resource&lt;/li&gt; &lt;li&gt;Integration with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-kubernetes-tools.vscode-kubernetes-tools"&gt;Kubernetes extension&lt;/a&gt; from Microsoft&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Using the Tekton Pipelines extension&lt;/h2&gt; &lt;p&gt;Installing the Tekton Pipelines extension will trigger the installation of both the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-kubernetes-tools.vscode-kubernetes-tools"&gt;Kubernetes extension&lt;/a&gt; and the latest release of the Tekton CLI tool &lt;code&gt;tkn&lt;/code&gt;.  Once these are installed, you will see a “Tekton Pipelines” view in your VSCode explorer with &lt;code&gt;Pipelines&lt;/code&gt;, &lt;code&gt;Tasks&lt;/code&gt;, &lt;code&gt;ClusterTasks&lt;/code&gt;, and &lt;code&gt;PipelineResource&lt;/code&gt; as top-level tree nodes.&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter wp-image-660747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/pipelines-view.png" alt="" width="426" height="404" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/pipelines-view.png 426w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/pipelines-view-300x285.png 300w" sizes="(max-width: 426px) 100vw, 426px" /&gt;&lt;/p&gt; &lt;p&gt;Clicking on any of these nodes expands the view to display nested resources.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Pipelines&lt;/code&gt; shows: &lt;code&gt;Pipelines &amp;#62; PipelineRuns &amp;#62; TaskRuns&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tasks&lt;/code&gt; shows: &lt;code&gt;Tasks &amp;#62; TaskRuns&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;ClusterTasks&lt;/code&gt; shows: &lt;code&gt;ClusterTasks&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;PipelineResources&lt;/code&gt; shows: &lt;code&gt;PipelineResources&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Context menu for any of these resources displays a range of actions, matching the functionality of the &lt;code&gt;tkn&lt;/code&gt; CLI tool.&lt;/p&gt; &lt;h4&gt;Available actions:&lt;/h4&gt; &lt;h5&gt;Pipeline&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Start Last Run&lt;/code&gt; — Restart the last PipelineRun for a Pipeline.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Start&lt;/code&gt; — Start a Pipeline with user-selected resources and parameters.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Describe&lt;/code&gt; — Describe a Pipeline.&lt;/li&gt; &lt;li&gt;&lt;code&gt;List PipelineRuns&lt;/code&gt; — List all the PipelineRuns for a Pipeline.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a Pipeline.&lt;/li&gt; &lt;/ul&gt; &lt;h5&gt;Task&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Start&lt;/code&gt; — Start a Task with user-selected resources and parameters.&lt;/li&gt; &lt;li&gt;&lt;code&gt;List TaskRuns&lt;/code&gt; — List all the TaskRuns for a Task in terminal.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a Task.&lt;/li&gt; &lt;/ul&gt; &lt;h5&gt;ClusterTask&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Start&lt;/code&gt; — Start a ClusterTask with user-selected resources and parameters.&lt;/li&gt; &lt;li&gt;&lt;code&gt;List TaskRuns&lt;/code&gt; — List all the TaskRuns for a ClusterTask in terminal.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a ClusterTask.&lt;/li&gt; &lt;/ul&gt; &lt;h5&gt;PipelineRun&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Describe&lt;/code&gt; — Describe a PipelineRun&lt;/li&gt; &lt;li&gt;&lt;code&gt;Show Logs&lt;/code&gt; — Show logs for a Pipeline.&lt;/li&gt; &lt;li&gt;&lt;code&gt;List TaskRuns&lt;/code&gt; — List all the TaskRuns for current namespace in terminal.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Cancel&lt;/code&gt; — Cancel a PipelineRun.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a PipelineRun.&lt;/li&gt; &lt;/ul&gt; &lt;h5&gt;TaskRun&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Show Logs&lt;/code&gt; — Show logs for a TaskRun.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a TaskRun.&lt;/li&gt; &lt;/ul&gt; &lt;h5&gt;Resource&lt;/h5&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Describe&lt;/code&gt; — Describe a Resource.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt; — Delete a Resource.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The extension defines code snippets that make it easier to create Tekton resources in yaml text editor.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-662297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/code-snippets.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/code-snippets.png" alt="" width="886" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/code-snippets.png 886w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/code-snippets-300x115.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/code-snippets-768x296.png 768w" sizes="(max-width: 886px) 100vw, 886px" /&gt;&lt;/p&gt; &lt;h4&gt;Available Snippets:&lt;/h4&gt; &lt;div&gt; &lt;ul&gt; &lt;li&gt;ClusterTask Resource&lt;/li&gt; &lt;li&gt;Pipeline or Task Parameter&lt;/li&gt; &lt;li&gt;Pipeline Resource&lt;/li&gt; &lt;li&gt;Pipeline Task Reference&lt;/li&gt; &lt;li&gt;Pipeline Task Reference Inputs, Parameters, and Outputs&lt;/li&gt; &lt;li&gt;PipelineResource Resource&lt;/li&gt; &lt;li&gt;PipelineResource Type&lt;/li&gt; &lt;li&gt;PipelineRun Resource&lt;/li&gt; &lt;li&gt;Kubernetes resource limits and requests&lt;/li&gt; &lt;li&gt;Tekton Task Resource&lt;/li&gt; &lt;li&gt;Tekton Task Inputs, Parameters, and Outputs&lt;/li&gt; &lt;li&gt;Pipeline Task Parameter&lt;/li&gt; &lt;li&gt;Tekton TaskRun Resource&lt;/li&gt; &lt;li&gt;Tekton Task Step&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h4&gt;Integration with Kubernetes Clusters View&lt;/h4&gt; &lt;p&gt;The extension adds &lt;code&gt;Tekton Piplines&lt;/code&gt; node to Kubernetes Clusters View. It gives you a way to access raw Tekton resources in active Kubernetes namespace.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-662127 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/clusters-view.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/clusters-view.png" alt="" width="496" height="772" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/clusters-view.png 496w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/clusters-view-193x300.png 193w" sizes="(max-width: 496px) 100vw, 496px" /&gt;&lt;/p&gt; &lt;p&gt;The Tekton Project is still in the early stages of development, so there is plenty of space for expansion and improvement within the extension. Of course, suggestions in a form of issues and pull requests are always welcome on the GitHub repository, found &lt;a href="https://github.com/redhat-developers/vscode-tekton"&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#38;linkname=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F08%2Fthe-new-tekton-pipelines-extension-for-visual-studio-code%2F&amp;#038;title=The%20new%20Tekton%20Pipelines%20extension%20for%20Visual%20Studio%20Code" data-a2a-url="https://developers.redhat.com/blog/2020/01/08/the-new-tekton-pipelines-extension-for-visual-studio-code/" data-a2a-title="The new Tekton Pipelines extension for Visual Studio Code"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/08/the-new-tekton-pipelines-extension-for-visual-studio-code/"&gt;The new Tekton Pipelines extension for Visual Studio Code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/JAbyjcPadUk" height="1" width="1" alt=""/&gt;</content><summary>The Tekton Project, which was announced in March after branching off from the Knative project, is creating excitement as a Kubernetes-native CI/CD pipeline tool. It offers the flexibility and agnosticism that Kubernetes is celebrated for and is positioned to become the first open standardized engine for executing pipelines. Although the project is still in the early stages of development, we could...</summary><dc:creator>Denis Golovin</dc:creator><dc:date>2020-01-08T08:03:24Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/08/the-new-tekton-pipelines-extension-for-visual-studio-code/</feedburner:origLink></entry><entry><title>Red Hat support for Node.js</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/CafsRAMxQek/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="javascript" scheme="searchisko:content:tags" /><category term="Node.js applications" scheme="searchisko:content:tags" /><category term="Red Hat Middleware" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Storage" scheme="searchisko:content:tags" /><category term="Red Hat Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat Software Collections" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>James Falkner</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_support_for_node_js</id><updated>2020-01-07T16:01:16Z</updated><published>2020-01-07T16:01:16Z</published><content type="html">&lt;div style="float: right;"&gt;&lt;img class="aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2018/03/nodejs-new-pantone-black-300x184.png" alt="Node.js Foundation Logo" width="200" height="184" /&gt;&lt;/div&gt; &lt;p&gt;For the past two years, &lt;a href="https://developers.redhat.com/middleware/"&gt;Red Hat Middleware&lt;/a&gt; has provided a supported Node.js runtime on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; as part of &lt;a href="https://www.redhat.com/en/products/runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes&lt;/a&gt;. Our goal has been to provide rapid releases of the upstream Node.js core project, example applications to get developers up and running quickly, Node.js container images, integrations with other components of Red Hat&amp;#8217;s cloud-native stack, and (of course) provide world-class service and support for customers. Earlier this year, the team behind Red Hat&amp;#8217;s distribution and support of Node.js even &lt;a href="https://developers.redhat.com/blog/2019/03/01/rhoar-node-js-wins-a-devie-award/"&gt;received a &amp;#8220;Devie&amp;#8221; award from DeveloperWeek for this work&lt;/a&gt;, further acknowledging Red Hat&amp;#8217;s role in supporting the community and ecosystem.&lt;/p&gt; &lt;h2&gt;Red Hat Node.js experts at your fingertips&lt;/h2&gt; &lt;p&gt;Red Hat collaborates in more ways than one with the fastest growing runtimes used in business-critical applications on the cloud by contributing to the community, being part of the Technical Steering Committee, and even participating and driving strategic initiatives to carve the future of Node.js. Combining this work with our Red Hat Enterprise Linux (RHEL) and OpenShift expertise, we can help you reach your goals of delivering and supporting business-critical applications on and off the cloud.&lt;/p&gt; &lt;p&gt;&lt;span id="more-667557"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;How to get Node.js from Red Hat&lt;/h2&gt; &lt;p&gt;In order to reach our goals of customer satisfaction and ease of use, Red Hat &lt;a href="https://access.redhat.com/products/nodejs/" target="_blank" rel="noopener noreferrer"&gt;offers support&lt;/a&gt; for the two most recent Node.js long-term service (LTS) versions. There are two support models for you to choose from. Here is a comparison of what they include:&lt;/p&gt; &lt;table class="c2" border="1"&gt; &lt;tbody&gt; &lt;tr class="c21"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c22"&gt;&lt;strong&gt;&lt;span class="c8 c10"&gt;&lt;span class="c6"&gt;Red Hat Enterprise Linux&lt;/span&gt; and OpenShift subscription&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c22"&gt;&lt;strong&gt;&lt;span class="c10 c8"&gt;Red Hat Runtimes subscription&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr class="c15"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Node.js&lt;/span&gt;&lt;span class="c6"&gt; packaged in Red Hat Software Collections (RHSCL) for Red Hat Enterprise Linux 7 and as a module in AppStream for RHEL 8.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Node.js packaged in Red Hat Software Collections (RHSCL) for Red Hat Enterprise Linux 7 and as a module in AppStream for RHEL 8.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr class="c15"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Node.js&lt;/span&gt;&lt;span class="c6"&gt; containers for Red Hat Enterprise Linux and OpenShift Container Platform (OCP).&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Node.js containers for Red Hat Enterprise Linux and Red Hat OpenShift Container Platform (OCP).&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr class="c15"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt;&lt;span class="c6"&gt;S&lt;/span&gt;&lt;span class="c6"&gt;upport for installation and maintenance.&lt;/span&gt;&lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;ul class="c18 lst-kix_2cl2ynif0ifh-0 start"&gt; &lt;li class="c3 c17"&gt;&lt;span class="c0"&gt;Full production support, including hotfixes and patches to get you up and running quickly.&lt;/span&gt;&lt;/li&gt; &lt;li class="c3 c17"&gt;&lt;span class="c0"&gt;Full development support (Node.js expertise)&lt;/span&gt;&lt;/li&gt; &lt;li class="c3 c17"&gt;&lt;span class="c0"&gt;Request for new features (Node.js upstream).&lt;/span&gt;&lt;/li&gt; &lt;li class="c3 c17"&gt;&lt;span class="c6"&gt;Support for microservice&lt;/span&gt;&lt;span class="c6 c26"&gt; &lt;/span&gt;&lt;span class="c0"&gt;libraries, developer tools (such as &lt;a href="https://developers.redhat.com/blog/2019/08/30/easily-deploy-node-js-applications-to-red-hat-openshift-using-nodeshift/"&gt;NodeShift&lt;/a&gt;), and starter apps.&lt;/span&gt;&lt;/li&gt; &lt;li class="c3 c17"&gt;&lt;span class="c0"&gt;Support for integration with functions-as-a-service and Knative.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr class="c15"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Two years of Red Hat Enterprise Linux support for each Node.js version.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c4"&gt;Two years of &lt;span class="c6"&gt;Red Hat Enterprise Linux&lt;/span&gt; support for each Node.js version.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr class="c15"&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c0"&gt;Updated images in the &lt;a href="https://catalog.redhat.com/software/containers/search?q=node.js&amp;#38;p=1" target="_blank" rel="noopener noreferrer"&gt;Red Hat Container Catalog&lt;/a&gt; every six weeks.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;td class="c12" colspan="1" rowspan="1"&gt; &lt;p class="c3"&gt;&lt;span class="c6"&gt;Updated images in the &lt;span class="c0"&gt;&lt;a href="https://catalog.redhat.com/software/containers/search?q=node.js&amp;#38;p=1" target="_blank" rel="noopener noreferrer"&gt;Red Hat Container Catalog&lt;/a&gt;&lt;/span&gt; &lt;/span&gt;&lt;span class="c6"&gt;every six&lt;/span&gt;&lt;span class="c6"&gt; weeks&lt;/span&gt;&lt;span class="c6"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;For OpenShift customers, the Node.js runtime is offered through the Red Hat Container Catalog in the form of a containerized OpenShift &lt;a href="https://blog.openshift.com/create-s2i-builder-image/" target="_blank" rel="noopener noreferrer"&gt;S2I builder image&lt;/a&gt; containing Node.js. The Node.js container image can either be pulled from the command line (using the &lt;code&gt;oc&lt;/code&gt; command) or from the OpenShift Developer Console.&lt;/p&gt; &lt;p&gt;For &lt;span class="c6"&gt;Red Hat Enterprise Linux&lt;/span&gt; customers, Node.js can be installed from the &lt;a href="https://developers.redhat.com/products/softwarecollections/overview"&gt;Red Hat Software Collections&lt;/a&gt; channel on RHEL 7 and as a module in &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_managing_and_removing_user_space_components/using-appstream_using-appstream" target="_blank" rel="noopener noreferrer"&gt;AppStream&lt;/a&gt; for RHEL 8.&lt;/p&gt; &lt;p&gt;Red Hat Customers using these distributions will be able to stay current with the latest updates and security advisories, know when and why containers are updated, and remain up-to-date on the most recent tagged image. Moving forward, customers can expect support for Node.js and other cloud-native runtimes according to the &lt;a href="https://access.redhat.com/support/policy/updates/jboss_notes" target="_blank" rel="noopener noreferrer"&gt;Red Hat JBoss Middleware Product Update and Support Policy&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Documentation&lt;/h2&gt; &lt;p&gt;The Runtimes team has been continuously adding to and improving on the official documentation for Red Hat&amp;#8217;s Node.js build. This work includes updates in the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_build_of_node.js/10/html/release_notes_for_node.js_10/" target="_blank" rel="noopener noreferrer"&gt;Release Notes&lt;/a&gt; and the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_build_of_node.js/10/html/node.js_runtime_guide/" target="_blank" rel="noopener noreferrer"&gt;Node.js Runtime Guide&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Developer Interactive Learning Scenarios&lt;/h2&gt; &lt;p&gt;These self-paced scenarios (see Figure 1) provide you with a pre-configured OpenShift instance that is accessible from your browser without any downloads or configuration. Use this tool to &lt;a href="https://learn.openshift.com/middleware/rhoar-getting-started-nodejs/" target="_blank" rel="noopener noreferrer"&gt;experiment with Node.js&lt;/a&gt; or learn about other technologies within Runtimes, and see how Node.js on OpenShift helps solve real-world problems.&lt;/p&gt; &lt;div id="attachment_464877" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://learn.openshift.com/middleware/rhoar-getting-started-nodejs/"&gt;&lt;img aria-describedby="caption-attachment-464877" class="wp-image-464877 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2018/03/katacoda-node-1024x604.png" alt="Node.js interactive learning scenario screenshot" width="640" height="378" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/03/katacoda-node-1024x604.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/03/katacoda-node-300x177.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/03/katacoda-node-768x453.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/03/katacoda-node.png 1180w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-464877" class="wp-caption-text"&gt;Figure 1: The Node.js Interactive Learning Scenario.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;More resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/products/nodejs/" target="_blank" rel="noopener noreferrer"&gt;Red Hat build of Node.js product page&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/09/13/develop-with-node-js-in-a-container-on-red-hat-enterprise-linux/"&gt;Develop with Node.js in a container on RHEL&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2015/10/07/red-hat-joins-node-js-foundation/"&gt;Red Hat joins the Node.js Foundation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://catalog.redhat.com/software/containers/search?q=node.js&amp;#38;p=1" target="_blank" rel="noopener noreferrer"&gt;Container images for the Red Hat build of Node.js&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/04/29/use-node-js-12-on-red-hat-openshift-today/"&gt;Use Node.js 12 on Red Hat OpenShift today&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://lanceball.com/riviera-dev-2017/" target="_blank" rel="noopener noreferrer"&gt;Node.js on OpenShift for Your Enterprise&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://lanceball.com/words/2017/01/05/protect-your-node-js-rest-clients-with-circuit-breakers" target="_blank" rel="noopener noreferrer"&gt;Protect Your Node.js REST Clients with Circuit Breakers&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#38;linkname=Red%20Hat%20support%20for%20Node.js" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F07%2Fred-hat-support-for-node-js%2F&amp;#038;title=Red%20Hat%20support%20for%20Node.js" data-a2a-url="https://developers.redhat.com/blog/2020/01/07/red-hat-support-for-node-js/" data-a2a-title="Red Hat support for Node.js"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/07/red-hat-support-for-node-js/"&gt;Red Hat support for Node.js&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/CafsRAMxQek" height="1" width="1" alt=""/&gt;</content><summary>For the past two years, Red Hat Middleware has provided a supported Node.js runtime on Red Hat OpenShift as part of Red Hat Runtimes. Our goal has been to provide rapid releases of the upstream Node.js core project, example applications to get developers up and running quickly, Node.js container images, integrations with other components of Red Hat’s cloud-native stack, and (of course) provide wor...</summary><dc:creator>James Falkner</dc:creator><dc:date>2020-01-07T16:01:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/07/red-hat-support-for-node-js/</feedburner:origLink></entry><entry><title>Code Ready Containers - Decision Management developer tools update</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vbAPjwmRmrk/code-ready-containers-decision-management-developer-tools-update.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyContainers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-code_ready_containers_decision_management_developer_tools_update</id><updated>2020-01-06T09:32:09Z</updated><published>2020-01-06T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-CvrUhtfWSq4/XhLqplll8YI/AAAAAAAAw1E/Eavq0t4_rPACH8cxVI78xZ7sInUUbvM-wCNcBGAsYHQ/s1600/rhdm-build-ocp.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="code ready containers" border="0" data-original-height="899" data-original-width="1600" height="179" src="https://1.bp.blogspot.com/-CvrUhtfWSq4/XhLqplll8YI/AAAAAAAAw1E/Eavq0t4_rPACH8cxVI78xZ7sInUUbvM-wCNcBGAsYHQ/s320/rhdm-build-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;For some time now we've been working on updating your experience using Code Ready Containers, a container platform installation for your local machine, by providing interesting developer tooling and project examples.&lt;br /&gt;&lt;br /&gt;There is no better way to learn about container technologies, container platforms, and container-based application development than getting hands-on with great open technologies.&lt;br /&gt;&lt;br /&gt;The first example here is the latest version of the Red Hat Decision Manager, version 7.5, installed on OpenShift Container Platform (either your own installation or using our Code Ready Containers installation).&lt;br /&gt;&lt;br /&gt;Get started today with rules and business logic in just a few simple steps, as follows.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 data-sourcepos="1:1-3:130" style="text-align: left;"&gt;AppDev in Cloud with Red Hat Decision Manager Install Demo&lt;/h3&gt;&lt;div data-sourcepos="3:1-4:70" dir="auto"&gt;This demo is to install Red Hat Decision Manager in the Cloud based on leveraging any Red Hat OpenShift Container Platform. It delivers a fully functioning Decision Manager containerized on OpenShift Container Platform.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-bWj8jnuO21c/XhLqxhvYLPI/AAAAAAAAw1I/viZeFkX4ALgUwmkzfSpdH3l-NsSpMvbZQCNcBGAsYHQ/s1600/rhdm-pod-ocp.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="code ready containers" border="0" data-original-height="897" data-original-width="1600" height="179" src="https://1.bp.blogspot.com/-bWj8jnuO21c/XhLqxhvYLPI/AAAAAAAAw1I/viZeFkX4ALgUwmkzfSpdH3l-NsSpMvbZQCNcBGAsYHQ/s320/rhdm-pod-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div data-sourcepos="3:1-4:70" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 data-sourcepos="7:1-9:131" style="text-align: left;"&gt;Install on OpenShift Container Platform&lt;/h3&gt;&lt;div data-sourcepos="9:1-10:83" dir="auto"&gt;There are two options to install and run this project on the OpenShift Container Platform; use your own existing installation or to install on Code Ready Containers which provides you with a local OpenShift cluster.&lt;/div&gt;&lt;ol data-sourcepos="12:1-13:0" dir="auto"&gt;&lt;li data-sourcepos="12:1-13:0"&gt;Ensure you have an OpenShift container based installation, such as one of the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul data-sourcepos="14:3-17:0" dir="auto"&gt;&lt;li data-sourcepos="14:3-15:0"&gt; &lt;div data-sourcepos="14:5-14:116"&gt;your own OpenShift installation, if using this you just need to pass the IP address to the init.{sh|bat} script. &lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="16:3-17:0"&gt; &lt;div data-sourcepos="16:5-16:95"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;Code Ready Containers Easy Install&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-sourcepos="18:1-23:0" dir="auto" start="2"&gt;&lt;li data-sourcepos="18:1-19:0"&gt; &lt;div data-sourcepos="18:4-18:146"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhdm-install-demo/-/archive/master/rhcs-rhdm-install-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;div data-sourcepos="18:4-18:146"&gt;&lt;br /&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="20:1-21:0"&gt; &lt;div data-sourcepos="20:4-20:106"&gt;Download Red Hat JBoss EAP &amp;amp; Red Hat Decision Manager, add to installs directory (see installs/README).&lt;/div&gt;&lt;div data-sourcepos="20:4-20:106"&gt;&lt;br /&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="22:1-23:0"&gt; &lt;div data-sourcepos="22:4-22:91"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using your own installation just point to Openshift Container Platform IP Address&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt;&amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt;&amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using Code Ready Containers or the Code Ready Containers Easy Install project, just add the cluster &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # address to HOST_IP variable found at the top of the init.{sh|bat} files, for example:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; # HOST_IP=api.crc.testing &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC5" lang="plaintext"&gt; # &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC6" lang="plaintext"&gt; # Now just run the script without any IP address arguments and it picks up that hostname as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC7" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC8" lang="plaintext"&gt; $ ./init.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div data-sourcepos="42:1-42:140" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div data-sourcepos="42:1-42:140" dir="auto"&gt;&lt;a href="https://1.bp.blogspot.com/-jn-qDgri7Ag/XhLqljebByI/AAAAAAAAw1A/ewJyAbDlq5YD4VjMg4I0AqLAzGk89D0FwCEwYBhgL/s1600/rhdm-ocp.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="Red Hat Decision Manager" border="0" data-original-height="988" data-original-width="1600" height="197" src="https://1.bp.blogspot.com/-jn-qDgri7Ag/XhLqljebByI/AAAAAAAAw1A/ewJyAbDlq5YD4VjMg4I0AqLAzGk89D0FwCEwYBhgL/s320/rhdm-ocp.png" title="" width="320" /&gt;&lt;/a&gt;Now log in to Red Hat Decision Manager to start developing containerized process automation projects (the address will be generated by OCP):&lt;/div&gt;&lt;ul data-sourcepos="44:3-45:0" dir="auto"&gt;&lt;li data-sourcepos="44:3-45:0"&gt;Code Ready Container example: http:rhcs-rhdm-install-demo-appdev-in-cloud.apps-crc.testing/decision-central ( u:erics / p:redhatdm1! )&lt;/li&gt;&lt;/ul&gt;&lt;div data-sourcepos="46:1-46:195" dir="auto"&gt;Not sure how to get started with Red Hat Decision Manager? Try one of these &lt;a href="https://bpmworkshop.gitlab.io/#/4" rel="nofollow noreferrer noopener" target="_blank"&gt;online workshops&lt;/a&gt; to build a first project from scratch.&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VXQTK5Cr0C8:Vpyv4ODnVDw:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VXQTK5Cr0C8:Vpyv4ODnVDw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VXQTK5Cr0C8:Vpyv4ODnVDw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=VXQTK5Cr0C8:Vpyv4ODnVDw:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=VXQTK5Cr0C8:Vpyv4ODnVDw:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/VXQTK5Cr0C8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vbAPjwmRmrk" height="1" width="1" alt=""/&gt;</content><summary>For some time now we've been working on updating your experience using Code Ready Containers, a container platform installation for your local machine, by providing interesting developer tooling and project examples. There is no better way to learn about container technologies, container platforms, and container-based application development than getting hands-on with great open technologies. The ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-01-06T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/VXQTK5Cr0C8/code-ready-containers-decision-management-developer-tools-update.html</feedburner:origLink></entry><entry><title>Apache Camel 3.1 - More camel-core optimizations coming</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/VhFghnrug3s/apache-camel-31-more-camel-core.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_1_more_camel_core_optimizations_coming</id><updated>2020-01-03T19:27:54Z</updated><published>2020-01-03T19:27:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Hope all is good and you had a safe entry into 2020.&amp;nbsp;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The Camel team is already busy working on the next Camel 3.1 version. One of the goals is to continue optimize camel-core, and this time we have had some time to look into finding some hot spots in the routing engine.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;One of the aspects we have looked at is also the object allocations that occurs per message that Camel routes. The JVM itself is great at allocation objects and garbage collecting them when they are no longer in use. However there are room for improvements if you can identify a number of objects that is unnecessary per EIP in the route.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So today I found several of these by just running a basic Camel route that is&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;from(timer:foo?period=1")&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; .to("log:foo");&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Which basically routes 1000 messages per second. And prints each message to the log.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;One of the bigger culprits in object allocations turned out to be human logging for the reactive executor which logs at TRACE level. So by avoiding this we can reduce a great deal of allocations, and string building for logging messages.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Other aspects we have optimised is the to EIP (the most used EIP) which is now smarter in its startup to avoid creating caches that was not necessary. And this goes together with areas where we now lazy creates some features in Camel that were very rarely in use that would otherwise also setup and create some caches.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;We also identified as part of the Camel 3 work, then the LRUCache was not pre warmed up as early as before, which meant Camel would startup a bit slower than it otherwise are capable of. So by moving this warmup to an earlier phase then Camel can startup faster by doing concurrent work on startup until the LRUCache is warmed up (its caffeine cache that needs this).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The log component has also been optimised to reduce its object allocations which building the logging message.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So all together a great day and if we compare startup up a Camel 3.0.0 vs 3.1.0-SNAPSHOT with the Camel route as shown above, then we have an awesome reducing in object allocations per second (thanks to YourKit for profiler).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-55e6jIr9Pjg/Xg-UYHz51zI/AAAAAAAACDM/LEQdm-zH7cgcEiDk0dyrRK5rrgjhqNw7wCLcBGAsYHQ/s1600/300vs310.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="187" data-original-width="1053" height="70" src="https://1.bp.blogspot.com/-55e6jIr9Pjg/Xg-UYHz51zI/AAAAAAAACDM/LEQdm-zH7cgcEiDk0dyrRK5rrgjhqNw7wCLcBGAsYHQ/s400/300vs310.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The profile says that in Camel 3.0.0 then Camel would roughly generate about 22.000 objects per second (routing 1000 messages). And that has been reduced to about 6.000 objects per second in Camel 3.1. That is fantastic, and is almost a 4x reduction.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=fjB-NzIpyEk:3riDz_UbaDM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=fjB-NzIpyEk:3riDz_UbaDM:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=fjB-NzIpyEk:3riDz_UbaDM:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=fjB-NzIpyEk:3riDz_UbaDM:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=fjB-NzIpyEk:3riDz_UbaDM:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=fjB-NzIpyEk:3riDz_UbaDM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=fjB-NzIpyEk:3riDz_UbaDM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/fjB-NzIpyEk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/VhFghnrug3s" height="1" width="1" alt=""/&gt;</content><summary>Hope all is good and you had a safe entry into 2020.  The Camel team is already busy working on the next Camel 3.1 version. One of the goals is to continue optimize camel-core, and this time we have had some time to look into finding some hot spots in the routing engine. One of the aspects we have looked at is also the object allocations that occurs per message that Camel routes. The JVM itself is...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-01-03T19:27:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/fjB-NzIpyEk/apache-camel-31-more-camel-core.html</feedburner:origLink></entry><entry><title>Dynamic case management in the event-driven era</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uKr9SLNov-0/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="Stream Processing" scheme="searchisko:content:tags" /><author><name>snandaku</name></author><id>searchisko:content:id:jbossorg_blog-dynamic_case_management_in_the_event_driven_era</id><updated>2020-01-03T08:00:13Z</updated><published>2020-01-03T08:00:13Z</published><content type="html">&lt;p&gt;Case management applications are designed to handle a complex combination of human and automated tasks. All case updates and case data are captured as a case file, which acts as a pivot for the management. This then serves as a system of record for future audits and tracking. The key characteristic of these workflows is that they are ad hoc in nature. There is no single resolution, and often, one size doesn&amp;#8217;t fit all.&lt;/p&gt; &lt;p&gt;Case management does not have structured time bounds. All cases typically don&amp;#8217;t resolve at the same time. Consider examples like client onboarding, dispute resolution, fraud investigations, etc., which, by virtue, try to provide customized solutions based on the specific use case. With the advent of more modern technological frameworks and practices like &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; and event-driven processing, the potential of case management solutions opens up even further. This article describes how you can make use of case management for dynamic workflow processing in this modern era, including components such as &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;, &lt;a href="https://developers.redhat.com/products/amq/overview"&gt;Red Hat AMQ Streams&lt;/a&gt;, &lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/products/rhpam/overview"&gt;Red Hat Process Automation Manager&lt;/a&gt;.&lt;br /&gt; &lt;span id="more-646077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Dynamic event-driven case management&lt;/h2&gt; &lt;div id="attachment_665577" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-665577" class="wp-image-665577 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/dynamic_case-cropped.png" alt="The event-driven case management model." width="640" height="385" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/dynamic_case-cropped.png 640w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/dynamic_case-cropped-300x180.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-665577" class="wp-caption-text"&gt;Figure 1: The event-driven case management model.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Keeping the case management ethos intact, it provides a way to orchestrate both automated and human tasks. As you can see in Figure 1, there is no direct invocation of services that leaves the case management layer. This fact has been reversed. Each of the service helpers performing a specific task on the dynamic case communicates with the case over an event stream.&lt;/p&gt; &lt;p&gt;This approach has several advantages:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The case doesn&amp;#8217;t need to wait for these asynchronous tasks to be completed; instead, it just waits for a signal.&lt;/li&gt; &lt;li&gt;Since there is no direct coupling, there is more scope for handling failures in a graceful manner.&lt;/li&gt; &lt;li&gt;Case management not only orchestrates the various microservices performing tasks for the case but also provides for human intervention on the case and the ability to create ad hoc tasks and case data on the fly.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Transaction investigation overview&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s consider a transaction investigation use case. The steps Account Validation, Fraud Validation, and Regulatory Compliance are mandatory and are invoked for every case (not in any specific order). An investigation is ordered if any validation fails. There could be other steps involved in the process, including audits or secondary level investigation of historical data, as shown in Figure 2:&lt;/p&gt; &lt;div id="attachment_666087" style="width: 591px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-666087" class="wp-image-666087" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/new_updated_image-300x217.png" alt="Figure 2: An example transaction investigation." width="581" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/new_updated_image-300x217.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/new_updated_image-768x555.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/new_updated_image.png 890w" sizes="(max-width: 581px) 100vw, 581px" /&gt;&lt;p id="caption-attachment-666087" class="wp-caption-text"&gt;Figure 2: An example transaction investigation.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Dynamic case management architecture overview&lt;/h2&gt; &lt;p&gt;Events are constantly created and pushed on to an event stream. The mandatory steps for the case evaluation, which include Account Validation, Fraud Validation, and Regulatory Compliance are modeled as microservices, which look for new transactions as they appear on the stream. Once the microservice evaluation is completed, the status is updated at the Case Management layer through a case correlation service, as shown in Figure 3:&lt;/p&gt; &lt;div id="attachment_647767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647767" class="wp-image-647767 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/case_arch-1-1024x669.png" alt="The example through the Case Management layer." width="640" height="418" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/case_arch-1-1024x669.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/case_arch-1-300x196.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/case_arch-1-768x502.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-647767" class="wp-caption-text"&gt;Figure 3: The example through the Case Management layer.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Let us now look at each of these pieces in a little more detail.&lt;/p&gt; &lt;h4&gt;Red Hat OpenShift&lt;/h4&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt; enables efficient container orchestration with rapid container provisioning, deploying, scaling, auto-healing, and management.&lt;/p&gt; &lt;h4&gt;Red Hat AMQ Streams&lt;/h4&gt; &lt;p&gt;AMQ Streams provides distributed messaging capabilities that can meet the demands for scale and performance.&lt;a href="https://access.redhat.com/products/red-hat-amq-streams"&gt; AMQ Streams&lt;/a&gt; takes an innovative approach by integrating the features of Kafka into the Red Hat OpenShift Container Platform, the market-leading comprehensive &lt;a href="https://www.redhat.com/en/technologies/cloud-computing/openshift"&gt;enterprise Kubernetes platform&lt;/a&gt;.&lt;/p&gt; &lt;h4&gt;Red Hat Fuse&lt;/h4&gt; &lt;p&gt;Red Hat Fuse enables developers to take an Agile Integration approach when developing solutions. By building and composing microservices, it provides for a distributed integration model. With over 200 out of box connectors, it makes it easy to create APIs and integration solutions rapidly.&lt;/p&gt; &lt;h4&gt;Red Hat Process Automation Manager&lt;/h4&gt; &lt;p&gt;Red Hat Process Automation Manager (formerly Red Hat JBoss BPM Suite) is a platform for developing containerized microservices and applications that automate business decisions and processes. It provides for a comprehensive Case Management platform which allows for static as well as dynamic tasks to be orchestrated.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Dynamic case management in action&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;If you notice closely, you will see that none of the systems directly communicate with each other. The stream is the channel of communication between every entity in the system. Also, you might notice that we separated the validation logic from the update status logic. Each of these run as individual microservices.&lt;/p&gt; &lt;p&gt;This overall architecture provides a number of advantages:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&amp;#8220;No tight coupling&amp;#8221; means more resilience. Kafka provides for graceful fault tolerance, which means an individual failure does not totally bring the system down.&lt;/li&gt; &lt;li&gt;Separating out microservice concerns means that each of these individual units can scale depending on load as necessary.&lt;/li&gt; &lt;li&gt;Clean separation of topic data means more than one consumer can work on it simultaneously (ex., reporting).&lt;/li&gt; &lt;li&gt;Bringing case management into the architecture opens up possibilities to dynamically work on the case.&lt;/li&gt; &lt;li&gt;Business activity monitoring provides insights into the orchestration of these disparate microservices and allows for key performance indicator (KPI) metrics reporting and tracking.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Transaction investigation case: Milestone to rescue&lt;/h2&gt; &lt;div id="attachment_665767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-665767" class="wp-image-665767 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/TransactionInvestigativeAnalysis.bpmn_-resized-1.jpg" alt="The mandatory milestones and steps for this use case." width="640" height="251" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/TransactionInvestigativeAnalysis.bpmn_-resized-1.jpg 640w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/TransactionInvestigativeAnalysis.bpmn_-resized-1-300x118.jpg 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-665767" class="wp-caption-text"&gt;Figure 4: The mandatory milestones and steps for this use case.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The mandatory steps for the case, including Account Validation checks, Fraud Validation checks, and Regulatory Compliance checks (as shown in Figure 4), are represented as milestones on the case. Milestones are a special service task that can be configured in the case definition designer by adding the milestone node to the process designer palette. Case management milestones generally occur at the end of a stage, but they can also be the result of achieving other milestones. In this example, we use this functionality to signal task completion by an external microservice.&lt;/p&gt; &lt;p&gt;Let us look at the Account Validation checks as an example. A typical sequence of steps is shown in Figure 5:&lt;/p&gt; &lt;div id="attachment_663767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-663767" class="wp-image-663767 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/sequence_diagram-1024x342.png" alt="The typical steps for Account Validation checks." width="640" height="214" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/sequence_diagram-1024x342.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/sequence_diagram-300x100.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/sequence_diagram-768x256.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/sequence_diagram.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-663767" class="wp-caption-text"&gt;Figure 5: The typical steps for Account Validation checks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;These steps break down as follows:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The incoming transaction is read from the Incoming Transaction topic by a case correlation service, which creates a case with the transaction payload and pushes it to a Case Map topic (a map of the incoming transaction and case ID).&lt;/li&gt; &lt;li&gt;The microservice reads from the Incoming Transaction topic and pushes the status of evaluation to a Status topic.&lt;/li&gt; &lt;li&gt;The Correlation microservice reads from the Status topic and the Case Map topic to update the case milestone for that case over the REST API:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_647777" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647777" class="wp-image-647777 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/milestone_api-1024x303.png" alt="The updated case milestone." width="640" height="189" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/milestone_api-1024x303.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/milestone_api-300x89.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/milestone_api-768x227.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/milestone_api.png 1428w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-647777" class="wp-caption-text"&gt;Figure 6: The updated case milestone.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;This sequence is then repeated for all three validation checks. Case milestones can also be kicked off with a matching condition. The required investigation, as we defined earlier, is triggered when any one of the validation checks fails. This process will then assign it to an investigator for review.&lt;/p&gt; &lt;p&gt;Notice that we haven&amp;#8217;t defined the milestones Audit, Order Past Transaction, and Further Investigation as a part of the regular case. This fact is because we can add these, and any other tasks or variables, to the case on the fly as needed. Red Hat Process Automation Manager provides the APIs to make this feature possible.&lt;/p&gt; &lt;p&gt;Figure 7 is an example of a &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.5/html/using_the_showcase_application_for_case_management/index" target="_blank" rel="noopener noreferrer"&gt;sample case management application&lt;/a&gt;:&lt;/p&gt; &lt;div id="attachment_647897" style="width: 632px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647897" class="wp-image-647897" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/sample_case_mgt-300x133.png" alt="An example case management application." width="622" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/sample_case_mgt-300x133.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/sample_case_mgt-768x341.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/sample_case_mgt-1024x454.png 1024w" sizes="(max-width: 622px) 100vw, 622px" /&gt;&lt;p id="caption-attachment-647897" class="wp-caption-text"&gt;Figure 7: An example case management application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As described in the earlier section, we support both the static set of milestones required to be completed for the case, as well as the ad hoc tasks that can be spun on demand, as shown in Figure 8:&lt;/p&gt; &lt;div id="attachment_647917" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647917" class="wp-image-647917 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/dynamic_user_task-1024x433.png" alt="The milestones and ad hoc tasks." width="640" height="271" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/dynamic_user_task-1024x433.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/dynamic_user_task-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/dynamic_user_task-768x324.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-647917" class="wp-caption-text"&gt;Figure 8: The milestones and ad hoc tasks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The case management Showcase uses REST API methods as exposed by the Kie-Server to add these dynamic tasks, as shown in Figure 9:&lt;/p&gt; &lt;div id="attachment_647947" style="width: 647px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647947" class="wp-image-647947" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/api_dynamic-300x105.png" alt="The tasks, displayed in the case management Showcase." width="637" height="223" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/api_dynamic-300x105.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/api_dynamic-768x270.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/api_dynamic-1024x360.png 1024w" sizes="(max-width: 637px) 100vw, 637px" /&gt;&lt;p id="caption-attachment-647947" class="wp-caption-text"&gt;Figure 9: Example showing API for dynamic task management&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Business activity monitoring&lt;/h2&gt; &lt;p&gt;A critical piece of a complex system of this nature is the ability to have insights into the status of these disparate microservices and human tasks. Monitoring KPI metrics and responding to problem trends is an integral job of a case management operations manager. Red Hat Process Automation Manager provides for a dashboard view of the running instances and lets you manage and track SLAs.&lt;/p&gt; &lt;p&gt;A combination of process and task-level SLA metrics plus case-related breakdown can be beneficial for identifying trends and reorganizing the workforce as necessary. Figure 10 shows a typical example of such a dashboard:&lt;/p&gt; &lt;div id="attachment_647987" style="width: 636px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647987" class="wp-image-647987" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam-300x129.png" alt="A breakdown of cases and task-level SLA metrics." width="626" height="270" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam-300x129.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam-768x331.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam-1024x441.png 1024w" sizes="(max-width: 626px) 100vw, 626px" /&gt;&lt;p id="caption-attachment-647987" class="wp-caption-text"&gt;Figure 10: A breakdown of cases and task-level SLA metrics.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;This dashboard provides high-level insight into the case data metrics. We can also create drill-down reports to pan right into a specific instance for traceability, as shown in Figure 11:&lt;/p&gt; &lt;div id="attachment_647997" style="width: 637px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-647997" class="wp-image-647997" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam_drill-300x128.png" alt="A specific instance drill-down report." width="627" height="267" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam_drill-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam_drill-768x328.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/bam_drill-1024x437.png 1024w" sizes="(max-width: 627px) 100vw, 627px" /&gt;&lt;p id="caption-attachment-647997" class="wp-caption-text"&gt;Figure 11: A specific instance drill-down report.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;By combining the power of dynamic case management, distributed enterprise integration, and event streaming, we can create a completely event-sourced system that is cloud-native, resilient, scalable, and adaptive. Red Hat Process Automation Manager and Red Hat Integration together in harmony can make this happen in style.&lt;/p&gt; &lt;h2&gt;References&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.redhat.com/en/products/integration?extIdCarryOver=true&amp;#38;sc_cid=701f20000012i69AAA" target="_blank" rel="noopener noreferrer"&gt;Red Hat Integration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.5/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Process Automation Manager&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#38;linkname=Dynamic%20case%20management%20in%20the%20event-driven%20era" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F03%2Fdynamic-case-management-in-the-event-driven-era%2F&amp;#038;title=Dynamic%20case%20management%20in%20the%20event-driven%20era" data-a2a-url="https://developers.redhat.com/blog/2020/01/03/dynamic-case-management-in-the-event-driven-era/" data-a2a-title="Dynamic case management in the event-driven era"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/03/dynamic-case-management-in-the-event-driven-era/"&gt;Dynamic case management in the event-driven era&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uKr9SLNov-0" height="1" width="1" alt=""/&gt;</content><summary>Case management applications are designed to handle a complex combination of human and automated tasks. All case updates and case data are captured as a case file, which acts as a pivot for the management. This then serves as a system of record for future audits and tracking. The key characteristic of these workflows is that they are ad hoc in nature. There is no single resolution, and often, one ...</summary><dc:creator>snandaku</dc:creator><dc:date>2020-01-03T08:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/03/dynamic-case-management-in-the-event-driven-era/</feedburner:origLink></entry><entry><title>Managing development environments with Red Hat CodeReady Workspaces 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vzqRV7XuRj4/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse Che" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Operators" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Workspaces" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-managing_development_environments_with_red_hat_codeready_workspaces_2</id><updated>2020-01-02T18:17:47Z</updated><published>2020-01-02T18:17:47Z</published><content type="html">&lt;p&gt;The release of &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;Red Hat CodeReady Workspaces 2.0 (CRW)&lt;/a&gt; brings changes. Based on &lt;a href="https://www.eclipse.org/che/getting-started/cloud/?sc_cid=701f2000000RtqCAAS"&gt;Eclipse Che 7&lt;/a&gt; and the &lt;a href="https://theia-ide.org/"&gt;Theia&lt;/a&gt; online editor, CRW 2.0 frees the developer from the confines of a specially configured PC in favor of multiple specially configured workspaces. Imagine having a separate work environment for each language, version, tools and more, all available from a browser. This article discusses some of the features of CRW.&lt;/p&gt; &lt;p&gt;&lt;span id="more-654277"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The components of a modern development environment&lt;/h2&gt; &lt;h3&gt;Workspaces&lt;/h3&gt; &lt;p&gt;At the heart of CRW is the concept and implementation of &amp;#8220;workspaces.&amp;#8221; A workspace is a development environment that can be likened to a PC loaded up with an operating system, programming language, tools, editor, and one or more development projects. You can even access a command line running in your browser.&lt;/p&gt; &lt;p&gt;You might have a workspace that has Java and Maven installed on a &lt;a href="https://coreos.com/"&gt;CoreOS&lt;/a&gt; image. Another workspace might be based on &lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux (RHEL)&lt;/a&gt; with Node.js and &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; installed. Need to work on some .NET Core 3.0 code? No problem, simply create a workspace. Yes, while Che 7 and CRW might have been initially created with Java developers in mind it is, in fact, very much language neutral. Its use of &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;the Language Server Protocol&lt;/a&gt; ensures future language support. Yes, even &lt;a href="https://microsoft.github.io/language-server-protocol/implementors/servers/"&gt;COBOL is supported&lt;/a&gt;. Grace Hopper meets Tim Berners-Lee.&lt;/p&gt; &lt;p&gt;In each case, you can optionally—and probably should—include a software project. For most use cases, this will be source code stored in a Git repository. CodeReady Workspaces handles this, as GitHub integration is built in.&lt;/p&gt; &lt;p&gt;In CRW, you simply start a workspace just as you would power on a PC. In seconds, the code editor is open in front of you, your project is loaded, and all the tools and language support you need are at hand. Several workspaces can be defined and switching between them is easy. Start and stop workspaces with a mouse click. Stop now, here, and restart the workspace later from a different computer. Indeed, all you need is a browser.&lt;/p&gt; &lt;h3&gt;In-browser editor&lt;/h3&gt; &lt;p&gt;The online editor for CRW is Theia, which is a browser-based editor based on Microsoft&amp;#8217;s Monaco editor. That name might not be familiar, so consider this: Monaco is the editor on which Visual Studio Code (VS Code) is built. This all really ties the editor together because some VS Code plugins will be API-compatible with Theia. In simpler terms: Some VS Code plugins will work with CRW.&lt;/p&gt; &lt;p&gt;Because VS Code is so popular, switching to CRW is a breeze. Indeed, if you put your browser in full-screen mode (by pressing F11), you&amp;#8217;ll soon forget that you&amp;#8217;re working in a browser. Very slick.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Aside:&lt;/strong&gt; Just to underscore this and demonstrate how off-the-wall I can be, I took my old Windows 10 mobile phone, connected it to my Microsoft Continuum adapter, and wrote Node.js code in the Edge browser. That&amp;#8217;s right; &lt;em&gt;I wrote code using a mobile phone&lt;/em&gt;. I mean, somebody had to do it.&lt;/p&gt; &lt;p&gt;The bottom line is this: If you have an internet connection and a browser, you can edit your code in an environment that feels just like working on a local PC.&lt;/p&gt; &lt;h3&gt;Stack configurations&lt;/h3&gt; &lt;p&gt;A stack is a combination of operating system, programming language support, tools, and any other bits necessary to create a workspace. A workspace is built using a stack as the starting point. Think of it this way: A stack is a definition much like a class in software, while a workspace is the instance of a stack, like an object is an instance of a class. Several pre-configured stacks are supplied with CRW out of the box, and you can  easily create your own stacks to meet your specific needs.&lt;/p&gt; &lt;h3&gt;Factories&lt;/h3&gt; &lt;p&gt;A factory is the means by which you build and share your workspace(s). That is, after you have a workspace that is tailored to exactly what you need to do, you then create a factory that builds that workspace. Once built, a factory is shared by simply sharing the URL. When a teammate visits the URL, the factory will build the workspace and they&amp;#8217;ll have the exact same environment you do.&lt;/p&gt; &lt;h2&gt;Example&lt;/h2&gt; &lt;p&gt;With the basics covered, above, let&amp;#8217;s see how to get CRW running and a workspace provisioned.&lt;/p&gt; &lt;h3&gt;How to get started&lt;/h3&gt; &lt;p&gt;The first step is to get an OpenShift cluster provisioned and CodeReady Workspaces up and running. You can find detailed instructions on &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;the Red Hat Developer CodeReady Workspaces page&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Creating a workspace&lt;/h3&gt; &lt;p&gt;The quickest and easiest way to ease into CRW is to create a predefined workspace. From the main Workspaces page of the dashboard, click on the Add Workspace button to get started.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-655707 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace.png" alt="" width="912" height="472" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace.png 912w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-300x155.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-768x397.png 768w" sizes="(max-width: 912px) 100vw, 912px" /&gt;&lt;/p&gt; &lt;p&gt;The next page will be where we can select a workspace.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-655717 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2-1024x635.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2-1024x635.png" alt="" width="640" height="397" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2-1024x635.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2-300x186.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2-768x476.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/add-workspace-2.png 1342w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;For this article, I&amp;#8217;m choosing the Java-Maven workspace. I&amp;#8217;ve also changed the workspace name to wksp-java-maven. You will probably want to make this a habit because the default names provide very little information about the workspace.&lt;/p&gt; &lt;p&gt;Click the CREATE &amp;#38; OPEN button. There&amp;#8217;s one at the top of the page and another at the bottom—either will do the same thing—and wait a minute or so. Instant workspace.&lt;/p&gt; &lt;h2&gt;We&amp;#8217;re just getting started&lt;/h2&gt; &lt;p&gt;So, now you have some code in a workspace. My next article will guide you through the edit-build-debug-commit cycle.&lt;/p&gt; &lt;h4&gt;See also&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/12/03/red-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development/"&gt;Red Hat CodeReady Workspaces 2: New tools to speed Kubernetes development&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/12/09/codeready-workspaces-devfile-demystified/"&gt;CodeReady Workspaces devfile, demystified&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#38;linkname=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fmanaging-development-environments-with-red-hat-codeready-workspaces-2%2F&amp;#038;title=Managing%20development%20environments%20with%20Red%20Hat%20CodeReady%20Workspaces%202" data-a2a-url="https://developers.redhat.com/blog/2020/01/02/managing-development-environments-with-red-hat-codeready-workspaces-2/" data-a2a-title="Managing development environments with Red Hat CodeReady Workspaces 2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/02/managing-development-environments-with-red-hat-codeready-workspaces-2/"&gt;Managing development environments with Red Hat CodeReady Workspaces 2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vzqRV7XuRj4" height="1" width="1" alt=""/&gt;</content><summary>The release of Red Hat CodeReady Workspaces 2.0 (CRW) brings changes. Based on Eclipse Che 7 and the Theia online editor, CRW 2.0 frees the developer from the confines of a specially configured PC in favor of multiple specially configured workspaces. Imagine having a separate work environment for each language, version, tools and more, all available from a browser. This article discusses some of t...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2020-01-02T18:17:47Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/02/managing-development-environments-with-red-hat-codeready-workspaces-2/</feedburner:origLink></entry><entry><title>Kubernetes-native Spring apps on Quarkus</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yt57wgoyavY/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Burr Sutter</name></author><id>searchisko:content:id:jbossorg_blog-kubernetes_native_spring_apps_on_quarkus</id><updated>2020-01-02T08:00:58Z</updated><published>2020-01-02T08:00:58Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/devnation/"&gt;DevNation tech talks&lt;/a&gt; are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;-native &lt;a href="https://developers.redhat.com/topics/spring-boot/"&gt;Spring&lt;/a&gt; apps on &lt;a href="https://developers.redhat.com/topics/quarkus/"&gt;Quarkus&lt;/a&gt; with Georgios Andrianakis, Software Engineer at Red Hat.&lt;span id="more-664217"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Ever wondered how you could create truly micro &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; using your favorite Spring APIs?  In this session, you&amp;#8217;ll see how Quarkus speaks Spring through a live-coding demonstration of a Quarkus application using some of the most popular Spring features.&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/s05fBX1gEIw" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start"&gt;﻿&lt;/span&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;p&gt;Join us at an upcoming&lt;a href="https://developers.redhat.com/events/"&gt; developer event&lt;/a&gt;, and see our collection of&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#38;linkname=Kubernetes-native%20Spring%20apps%20on%20Quarkus" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F02%2Fkubernetes-native-spring-apps-on-quarkus%2F&amp;#038;title=Kubernetes-native%20Spring%20apps%20on%20Quarkus" data-a2a-url="https://developers.redhat.com/blog/2020/01/02/kubernetes-native-spring-apps-on-quarkus/" data-a2a-title="Kubernetes-native Spring apps on Quarkus"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/02/kubernetes-native-spring-apps-on-quarkus/"&gt;Kubernetes-native Spring apps on Quarkus&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yt57wgoyavY" height="1" width="1" alt=""/&gt;</content><summary>DevNation tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about Kubernetes-native Spring apps on Quarkus with Georgios Andrianakis, Software Engineer at Red Hat. Ever wondered how you could create truly micro microservices using your favorite Spring API...</summary><dc:creator>Burr Sutter</dc:creator><dc:date>2020-01-02T08:00:58Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/02/kubernetes-native-spring-apps-on-quarkus/</feedburner:origLink></entry><entry><title>Skupper.io: Let your services communicate across Kubernetes clusters</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zCsIZ4U8Q6Q/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Skupper" scheme="searchisko:content:tags" /><author><name>Andrea Tarocchi</name></author><id>searchisko:content:id:jbossorg_blog-skupper_io_let_your_services_communicate_across_kubernetes_clusters</id><updated>2020-01-01T08:00:00Z</updated><published>2020-01-01T08:00:00Z</published><content type="html">&lt;p&gt;In the past few years, the popularity and adoption of containers has skyrocketed, and the &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; container orchestration platform has been largely adopted as well. With these changes, a new set of challenges has emerged when dealing with applications deployed on Kubernetes clusters in the real world. One challenge is how to deal with communication between multiple clusters that might be in different networks (even private ones), behind firewalls, and so on.&lt;/p&gt; &lt;p&gt;One possible solution to this problem is to use a Virtual Application Network (VAN), which is sometimes referred to as a Layer 7 network. In a nutshell, a VAN is a logical network that is deployed at the application level and introduces a new layer of addressing for fine-grained application components with no constraints on the network topology. For a much more in-depth explanation, please read &lt;a href="https://netprototalk.com/2019/11/12/virtual-application-networks-for-hybrid-cloud-interconnect/" target="_blank" rel="noopener noreferrer"&gt;this excellent article&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;So, what is &lt;a href="https://skupper.io" target="_blank" rel="noopener noreferrer"&gt;Skupper&lt;/a&gt;? In the project&amp;#8217;s own words:&lt;/p&gt; &lt;p style="padding-left: 40px"&gt;&lt;em&gt;Skupper is a layer seven service interconnect. It enables secure communication across Kubernetes clusters with no VPNs or special firewall rules.&lt;/em&gt;&lt;span id="more-663507"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Skupper is a VAN implementation. Its high-level architecture is depicted in Figure 1:&lt;/p&gt; &lt;div id="attachment_663537" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-overview.png"&gt;&lt;img aria-describedby="caption-attachment-663537" class="wp-image-663537 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-overview-1024x353.png" alt="Skupper.io overview" width="640" height="221" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-overview-1024x353.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-overview-300x103.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-overview-768x265.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-663537" class="wp-caption-text"&gt;Figure 1: Skupper.io architectural overview.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Once Skupper is installed in each Kubernetes cluster and connected with the others, Service A from cluster one can communicate with Service B from cluster two, and with Service C from cluster three (and the other way around). The clusters do not need to be all public or on the same infrastructure. They can be behind a firewall, or even on private networks not accessible from outside (providing that they can reach outside to connect themselves to the skupper VAN).&lt;/p&gt; &lt;h2&gt;Skupper architecture&lt;/h2&gt; &lt;p&gt;Given the overall architecture, how does the green Skupper component in Figure 1 work? Figure 2 lists the Skupper components for Kubernetes cluster one and describes the interactions between them:&lt;/p&gt; &lt;div id="attachment_663527" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-detailed-architecture.png"&gt;&lt;img aria-describedby="caption-attachment-663527" class="wp-image-663527 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-detailed-architecture-1024x565.png" alt="Skupper.io detailed architecture" width="640" height="353" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-detailed-architecture-1024x565.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-detailed-architecture-300x166.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/skupper-detailed-architecture-768x424.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-663527" class="wp-caption-text"&gt;Figure 2: Skupper&amp;#8217;s detailed architecture.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The first thing to notice is that Skupper can be managed using the dedicated &lt;code&gt;skupper&lt;/code&gt; CLI command. Next is that when you first install Skupper in a Kubernetes and OpenShift cluster, two components are deployed: &lt;code&gt;skupper-router&lt;/code&gt; and &lt;code&gt;skupper-proxy-controller&lt;/code&gt;. The former is an instance of &lt;a href="https://qpid.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Apache Qpid&lt;/a&gt;, an open source Advanced Message Queuing Protocol (AMQP) router that is responsible for creating the VAN. Qpid helps Kubernetes and OpenShift clusters communicate by tunneling HTTP and TCP traffic into AMQP.&lt;/p&gt; &lt;p&gt;If you are familiar with the &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/" target="_blank" rel="noopener noreferrer"&gt;Operator pattern&lt;/a&gt;, think of &lt;code&gt;skupper-proxy-controller&lt;/code&gt; as an Operator: This tool watches for services annotated with &lt;code&gt;skupper.io/proxy&lt;/code&gt; and instantiates, for each of them, a &lt;code&gt;service-*-proxy&lt;/code&gt; pod. That pod tunnels the protocols spoken by Service A (i.e., HTTP or TCP) into AMQP and the &lt;code&gt;skupper-router&lt;/code&gt; does the rest.&lt;/p&gt; &lt;h2&gt;Use case: A local service exporter with Skupper&lt;/h2&gt; &lt;p&gt;Another challenge that comes with developing cloud-native applications coding and testing effectively in a hybrid environment. Some of the services that compose your application might be, at development time, hosted locally on your laptop (or in your dev environment), while others might be deployed on a remote Kubernetes cluster. How would you easily make your local services accessible to the remote cluster without setting up a VPN or another &amp;#8220;complicated&amp;#8221; network configuration?&lt;/p&gt; &lt;p&gt;One option is to leverage the Skupper mechanism to export a local service running outside of Kubernetes to a remote Kubernetes cluster. Figure 3 sketches what we want to achieve—a simple TCP echo service running on our laptop that is usually connected to a firewalled private network:&lt;/p&gt; &lt;div id="attachment_663517" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter.png"&gt;&lt;img aria-describedby="caption-attachment-663517" class="wp-image-663517 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter-1024x552.png" alt="&amp;#34;Service exporter&amp;#34; use case with Skupper.io" width="640" height="345" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter-1024x552.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/service-exporter.png 1583w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-663517" class="wp-caption-text"&gt;Figure 3: A service exporter use case with Skupper.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We want to access this service from a pod running on the remote Kubernetes cluster that has no network access to the laptop network.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; A number of manual steps are needed at the moment because this use case is not yet implemented as a &lt;code&gt;skupper&lt;/code&gt; CLI subcommand. There is an issue open regarding when that feature will be implemented. When it is, all of the following steps will be replaced by a single &lt;code&gt;skupper CLI&lt;/code&gt; invocation.&lt;/p&gt; &lt;p&gt;Let us look at the steps you will need to follow (for now):&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Start by downloading the latest version of the &lt;code&gt;skupper&lt;/code&gt; CLI from &lt;a href="https://github.com/skupperproject/skupper-cli/releases" target="_blank" rel="noopener noreferrer"&gt;https://github.com/skupperproject/skupper-cli/releases&lt;/a&gt;. Add it to your path and make it executable.&lt;/li&gt; &lt;li&gt;Log into your remote cluster with &lt;code&gt;oc&lt;/code&gt; or &lt;code&gt;kubectl&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Install Skupper on the remote cluster:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ skupper init --id public&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Make the skupper router accessible from outside the cluster:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ oc apply -f - &amp;#60;&amp;#60; EOF kind: Route apiVersion: route.openshift.io/v1 metadata: name: skupper-messaging spec: to: kind: Service name: skupper-messaging weight: 100 port: targetPort: amqps tls: termination: passthrough insecureEdgeTerminationPolicy: None wildcardPolicy: None EOF &lt;/pre&gt; &lt;ol start="5"&gt; &lt;li&gt;Create a service on the cluster representing the local echo service. This service will not have an implementation, it is just to help Skupper to correctly handle this feature:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ oc apply -f - &amp;#60;&amp;#60; EOF kind: Service apiVersion: v1 metadata: name: echo annotations: skupper.io/proxy: tcp spec: ports: - protocol: TCP port: 2000 targetPort: 2000 selector: dummy: selector EOF&lt;/pre&gt; &lt;ol start="6"&gt; &lt;li&gt;Clone the &lt;code&gt;skupper-proxy&lt;/code&gt; project:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ git clone git@github.com:skupperproject/skupper-proxy.git&lt;/pre&gt; &lt;ol start="7"&gt; &lt;li&gt;Go to that project&amp;#8217;s &lt;code&gt;bin/&lt;/code&gt; directory with:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ cd skupper-proxy/bin&lt;/pre&gt; &lt;ol start="8"&gt; &lt;li&gt;Extract certificates that are needed to mutually authenticate your connection:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ oc extract secret/skupper&lt;/pre&gt; &lt;ol start="9"&gt; &lt;li&gt;Modify &lt;code&gt;connection.json&lt;/code&gt; to look like this:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;{ "scheme": "amqps", "host": "", "port": "443", "verify": false, "tls": { "ca": "ca.crt", "cert": "tls.crt", "key": "tls.key", "verify": false } }&lt;/pre&gt; &lt;p&gt;where the host can be obtained by:&lt;/p&gt; &lt;pre&gt;$ oc get route skupper-messaging -o=jsonpath='{.spec.host}{"\n"}'&lt;/pre&gt; &lt;ol start="10"&gt; &lt;li&gt;Run a simple Bash TCP echo service on port 2000 locally in a separate shell that will be kept running:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ nc -l 2000 -k -c 'xargs -n1 echo'&lt;/pre&gt; &lt;ol start="11"&gt; &lt;li&gt;Connect to the Skupper running on the remote cluster. Note that the port must match the one used by the echo service in step 10 (i.e., 2000) and &lt;code&gt;echo&lt;/code&gt; must match the name of the service you created on the cluster earlier:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;$ node ./simple.js 'amqp:echo=&amp;#62;tcp:2000'&lt;/pre&gt; &lt;p&gt;Now. everything is set. You can go the remote cluster, use a pod that has the Netcat command &lt;code&gt;nc&lt;/code&gt; installed like &lt;code&gt;busybox:latest&lt;/code&gt;, and run:&lt;/p&gt; &lt;pre&gt;$ nc localhost echo&lt;/pre&gt; &lt;p&gt;Type a word, and you should see it echoed back as it passes through &lt;code&gt;skupper-proxy-pod&lt;/code&gt; -&amp;#62; &lt;code&gt;skupper routerrouter&lt;/code&gt; -&amp;#62; &lt;code&gt;simple.js&lt;/code&gt; on your laptop -&amp;#62; the &lt;code&gt;TCP echo service&lt;/code&gt; on your laptop, and back!&lt;/p&gt; &lt;h2&gt;Conclusions and next steps&lt;/h2&gt; &lt;p&gt;This project is still under heavy development and improves every day. Check out the progress on the &lt;a href="https://skupper.io" target="_blank" rel="noopener noreferrer"&gt;official site&lt;/a&gt; or directly from the code on the &lt;a href="https://github.com/skupperproject" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt; project. In particular, &lt;a href="https://github.com/skupperproject/skupper-cli/issues/11" target="_blank" rel="noopener noreferrer"&gt;here is the issue that tracks&lt;/a&gt; all of the work involved in supporting the local service exporter use case directly as a Skupper CLI command.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#38;linkname=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F01%2Fskupper-io-let-your-services-communicate-across-kubernetes-clusters%2F&amp;#038;title=Skupper.io%3A%20Let%20your%20services%20communicate%20across%20Kubernetes%20clusters" data-a2a-url="https://developers.redhat.com/blog/2020/01/01/skupper-io-let-your-services-communicate-across-kubernetes-clusters/" data-a2a-title="Skupper.io: Let your services communicate across Kubernetes clusters"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/01/01/skupper-io-let-your-services-communicate-across-kubernetes-clusters/"&gt;Skupper.io: Let your services communicate across Kubernetes clusters&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zCsIZ4U8Q6Q" height="1" width="1" alt=""/&gt;</content><summary>In the past few years, the popularity and adoption of containers has skyrocketed, and the Kubernetes container orchestration platform has been largely adopted as well. With these changes, a new set of challenges has emerged when dealing with applications deployed on Kubernetes clusters in the real world. One challenge is how to deal with communication between multiple clusters that might be in dif...</summary><dc:creator>Andrea Tarocchi</dc:creator><dc:date>2020-01-01T08:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/01/01/skupper-io-let-your-services-communicate-across-kubernetes-clusters/</feedburner:origLink></entry><entry><title>Spanning JGroups Kubernetes-based clusters across Google and Amazon clouds</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6q23oPVKhqo/spanning-jgroups-kubernetes-based.html" /><category term="feed_group_name_jgroups" scheme="searchisko:content:tags" /><category term="feed_name_belasblog" scheme="searchisko:content:tags" /><category term="JBoss Application Server" scheme="searchisko:content:tags" /><category term="kubernetes openshift jgroups cross-site cluster RELAY2" scheme="searchisko:content:tags" /><author><name>Bela Ban</name></author><id>searchisko:content:id:jbossorg_blog-spanning_jgroups_kubernetes_based_clusters_across_google_and_amazon_clouds</id><updated>2019-12-31T09:21:28Z</updated><published>2019-12-31T09:01:00Z</published><content type="html">In this (long!) post, I'll provide step-by-step instructions on how to create JGroups clusters in Google Kubernetes Engine (GKE) and Amazon (EKS) clusters, and connect them into one virtual cluster using &lt;a href="http://www.jgroups.org/manual4/index.html#Relay2Advanced"&gt;RELAY2&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Each local cluster is called a &lt;b&gt;site&lt;/b&gt;. In this tutorial, we'll call the sites &lt;b&gt;NYC&lt;/b&gt; and &lt;b&gt;SFC&lt;/b&gt;. We'll start 5 nodes in NYC and 3 in SFC.&lt;br /&gt;&lt;br /&gt;The sample deployments and services are defined in YAML and we're using &lt;b&gt;Kubernetes&lt;/b&gt; to create the clusters.&lt;br /&gt;&lt;br /&gt;To try this yourself, you'll need &lt;b&gt;kubectl&lt;/b&gt;, &lt;b&gt;eksctl&lt;/b&gt; and &lt;b&gt;gcloud&lt;/b&gt; installed, and accounts on both EKS and GKE.&lt;br /&gt;&lt;br /&gt;The demo is &lt;a href="https://github.com/belaban/JGroups/blob/master/src/org/jgroups/demos/RelayDemo.java"&gt;RelayDemo&lt;/a&gt; [1]. It is a simple chat, started in a pod, and every typed line appears in all pods across all sites, and then every pod sends a response back to the sender, which displays all responses. This way, we know who received our chat message.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Architecture&lt;/h3&gt;The setup of this tutorial is as follows:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-yrs8If-J8a0/XgoYQyGVWxI/AAAAAAABSl8/bzaVzzzkFtUYvW-CevaQSYkSCtatWVyJgCLcBGAsYHQ/s1600/xsite.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="412" data-original-width="1231" height="212" src="https://1.bp.blogspot.com/-yrs8If-J8a0/XgoYQyGVWxI/AAAAAAABSl8/bzaVzzzkFtUYvW-CevaQSYkSCtatWVyJgCLcBGAsYHQ/s640/xsite.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;On the left, we have nodes A,B,C,D,E in site NYC (Amazon EKS) and on the right, X,Y,Z in SFC (Google GKE).&lt;br /&gt;&lt;br /&gt;A in NYC and X in SFC assume the role of &lt;b&gt;site master&lt;/b&gt; (see [2]). This means, they join a separate JGroups cluster, called &lt;b&gt;bridge&lt;/b&gt; &lt;b&gt;cluster&lt;/b&gt;, which connects the two sites, and relay messages between the sites.&lt;br /&gt;&lt;br /&gt;A site master is not a dedicated node, but any node can assume the role of site master. For example, when A leaves or crashes, B will take over the site master role, join the bridge cluster and relay messages between sites NYC and SFC.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The problem with Kubernetes / Openshift is that a pod cannot directly connect to a pod in a different cluster, region, or cloud provider&lt;/b&gt;. That is, without resorting to specific container network implementations (CNI) implementations.&lt;br /&gt;&lt;br /&gt;To overcome this problem, the above setup uses a &lt;b&gt;GossipRouter&lt;/b&gt; and &lt;b&gt;TUNNEL&lt;/b&gt; [3]: this way, &lt;b&gt;A and X can communicate across different regions or (in this case) even different cloud providers&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;The way this is done is simple: the configuration of the bridge cluster includes TUNNEL as transport and a list of GossipRouters, in this case the ones in NYC and SFC (more details later).&lt;br /&gt;&lt;br /&gt;A and X connect to both GossipRouters via TCP, under their respective cluster names. So A connects to GR-NYC and GR-SFC and X connects to its local GR, and the remote one in NYC.&lt;br /&gt;&lt;br /&gt;When A wants to send a message to X, it can use either its local GossipRouter, or the one in SFC (by default, JGroups load-balances requests between the GossipRouters). In any case, &lt;b&gt;the ingress TCP connection established by X to a GossipRouter is used to send egress traffic to X&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;This means, we can send messages to any member of the bridge cluster, as long as &lt;b&gt;all GossipRouters are publicly accessible and the members of the bridge cluster can connect to them&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;But now let's get cracking! We'll do the following in the next sections:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Set up an EKS cluster (NYC)&lt;/li&gt;&lt;li&gt;Set up a GKE cluster (SFC)&lt;/li&gt;&lt;li&gt;Deploy a GossipRouter service in both sites&lt;/li&gt;&lt;li&gt;Deploy 5 pods in NYC and 3 pods in SFC&lt;/li&gt;&lt;li&gt;Use one of the pods in each site to talk to the other site with RelayDemo&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;Set up the NYC cluster in EKS&lt;/h3&gt;This can be done via the GUI, the AWS CLI or eksctl [4]. For simplicity, I chose the latter.&lt;br /&gt;To create a cluster "nyc" in the us-east-1 region, execute:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;eksctl create cluster --name nyc --region us-east-1 --nodegroup-name nyc-nodegroup --node-type t3.small --nodes 2 --nodes-min 1 --nodes-max 4 --managed&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This will take 10-15 minutes.&lt;br /&gt;&lt;br /&gt;The local kubeconfig should now point to the AWS cluster. This can be seen with kubectl config get-contexts. If this is not the case, use the AWS CLI to change this, e.g.:&lt;br /&gt;&lt;pre class="programlisting"&gt;&lt;code class="nohighlight hljs"&gt;&lt;code&gt;&lt;/code&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;aws eks --region use-east-1 update-kubeconfig --name nyc&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This make kubectl access the NYC cluster by default.&lt;br /&gt;&lt;br /&gt;Let's now deploy the GossipRouter in NYC:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl apply -f https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/gossiprouter.yaml&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The YAML file contains a deployment of the GossipRouter and a LoadBalancer service: [5]. The public address of the GossipRouter service can be seen as follows:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl get svc gossiprouter&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TYPE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CLUSTER-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EXTERNAL-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; PORT(S)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;gossiprouter&amp;nbsp;&amp;nbsp; LoadBalancer&amp;nbsp;&amp;nbsp; 10.100.28.38&amp;nbsp;&amp;nbsp; a6abc71e42b2211ea9c3716e7fa74966-862f92ba6a28fd36.elb.us-east-1.amazonaws.com&amp;nbsp;&amp;nbsp; 8787:31598/TCP,9000:30369/TCP,12001:31936/TCP&amp;nbsp;&amp;nbsp; 2m56s&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;We can see that the public address is a6abc71e42b2211ea9c3716e7fa74966-862f92ba6a28fd36.elb.us-east-1.amazonaws.com. Write this down somewhere, as we'll need to add it to our TUNNEL configuration later.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Set up SFC cluster in GKE&lt;/h3&gt;To create a cluster on GKE, execute:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;gcloud container clusters create sfc&amp;nbsp; --num-nodes 2&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;This will create a cluster in the default region configured in gcloud.&lt;br /&gt;&lt;br /&gt;Note that this added a new context to the kube config, and switched to it. If not, manually switch to it, e.g.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl config use-context gke_ispnperftest_us-central1-a_sfc&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now deploy the GossipRouter in SFC (same as above, for NYC):&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl apply -f https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/gossiprouter.yaml&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now get the public IP address of the GossipRouter:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl get svc gossiprouter&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TYPE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CLUSTER-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EXTERNAL-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; PORT(S)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;gossiprouter&amp;nbsp;&amp;nbsp; LoadBalancer&amp;nbsp;&amp;nbsp; 10.19.247.254&amp;nbsp;&amp;nbsp; 35.232.92.116&amp;nbsp;&amp;nbsp; 8787:30150/TCP,9000:32534/TCP,12001:32455/TCP&amp;nbsp;&amp;nbsp; 101s&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The public IP is 35.232.92.116. Take a note of this, as we'll need it later.&lt;br /&gt;We're now ready to deploy the cluster nodes in NYC and SFC.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Deploy the pods in NYC&lt;/h3&gt;We'll deploy 5 pods in NYC. To do this, we first need to switch the context back to NYC, e.g. by executing&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubectl config use-context jgroups@nyc.us-east-1.eksctl.io&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Next, download the 2 YAML files for NYC and SFC locally (we need to make changes):&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;mkdir tmp ; cd tmp&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;curl https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/nyc.yaml &amp;gt; nyc.yaml&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;curl https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/sfc.yaml &amp;gt; sfc.yaml &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now edit both YAML files and replace the TUNNEL_INITIAL_HOSTS system variable &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;"load-balancer-1[12001],load-balancer-2[12001]"&lt;/span&gt; with&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;"a6abc71e42b2211ea9c3716e7fa74966-862f92ba6a28fd36.elb.us-east-1.amazonaws.com[12001],35.232.92.116[12001]"&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;This points the TUNNEL protocol to the two publicly accessible GossipRouters in NYC and SFC:&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: #efefef;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="background-color: #efefef; color: navy; font-weight: bold;"&gt;TUNNEL&lt;/span&gt;&lt;span style="background-color: #efefef; color: navy; font-weight: bold;"&gt;&lt;/span&gt;&lt;span style="background-color: #efefef; color: navy; font-weight: bold;"&gt;&lt;/span&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;pre style="background-color: white; color: black; font-family: 'Monaco'; font-size: 9,0pt;"&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt; &lt;/span&gt;&lt;span style="background-color: #efefef; color: blue; font-weight: bold;"&gt;port_range&lt;/span&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt;="${PORT_RANGE:0}"&lt;/span&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt; &lt;/span&gt;&lt;span style="background-color: #efefef; color: blue; font-weight: bold;"&gt;gossip_router_hosts&lt;/span&gt;&lt;span style="background-color: #efefef; color: green; font-weight: bold;"&gt;="${TUNNEL_INITIAL_HOSTS:127.0.0.1[12001]}"/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;This means that TUNNEL will establish 2 TCP connections, one to the GossipRouter in NYC and the other one to the GossipRouter in SFC.&lt;br /&gt;&lt;br /&gt;Now deploy the NYC pods:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl apply -f tmp/nyc.yaml&lt;br /&gt;deployment.apps/nyc created&lt;br /&gt;service/nyc created&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This shows that 1 pod has been created:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl get pods -o wide&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; READY&amp;nbsp;&amp;nbsp; STATUS&amp;nbsp;&amp;nbsp;&amp;nbsp; RESTARTS&amp;nbsp;&amp;nbsp; AGE&amp;nbsp;&amp;nbsp; IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; NODE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; NOMINATED NODE&amp;nbsp;&amp;nbsp; READINESS GATES&lt;br /&gt;gossiprouter-f65bb6858-jks8q&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 25m&amp;nbsp;&amp;nbsp; 192.168.36.19&amp;nbsp;&amp;nbsp; ip-192-168-38-111.ec2.internal&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&lt;br /&gt;nyc-5f4964d444-9v5dm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 73s&amp;nbsp;&amp;nbsp; 192.168.26.87&amp;nbsp;&amp;nbsp; ip-192-168-8-51.ec2.internal&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Next, scale this to 5:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl scale --replicas=5 deployment nyc&lt;br /&gt;deployment.extensions/nyc scaled&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Listing the pods shows 5 'nyc' pods:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl get pods&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; READY&amp;nbsp;&amp;nbsp; STATUS&amp;nbsp;&amp;nbsp;&amp;nbsp; RESTARTS&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;gossiprouter-f65bb6858-jks8q&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 27m&lt;br /&gt;nyc-5f4964d444-2ttfp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 49s&lt;br /&gt;nyc-5f4964d444-4lccs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 49s&lt;br /&gt;nyc-5f4964d444-8622d&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 49s&lt;br /&gt;nyc-5f4964d444-9v5dm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3m21s&lt;br /&gt;nyc-5f4964d444-tm5h5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 49s&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Let's exec into one of the and make sure that the local cluster formed:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl exec nyc-5f4964d444-2ttfp probe.sh&lt;br /&gt;#1 (307 bytes):&lt;br /&gt;local_addr=nyc-5f4964d444-2ttfp-24388&lt;br /&gt;physical_addr=192.168.53.43:7800&lt;br /&gt;view=[nyc-5f4964d444-9v5dm-21647|4] (5) [nyc-5f4964d444-9v5dm-21647, nyc-5f4964d444-tm5h5-64872, nyc-5f4964d444-2ttfp-24388, nyc-5f4964d444-8622d-63103, nyc-5f4964d444-4lccs-4487]&lt;br /&gt;cluster=RelayDemo&lt;br /&gt;version=4.1.9-SNAPSHOT (Mont Ventoux)&lt;br /&gt;&lt;br /&gt;1 responses (1 matches, 0 non matches)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This shows a view of 5, so the 5 pods did indeed form a cluster.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Deploy the pods in SFC&lt;/h3&gt;Let's now switch the kubeconfig back to SFC (see above) and deploy the SFC cluster:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl apply -f tmp/sfc.yaml&lt;br /&gt;deployment.apps/sfc created&lt;br /&gt;service/sfc created&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt;&amp;nbsp; kubectl scale --replicas=3 deployment/sfc&lt;br /&gt;deployment.extensions/sfc scaled&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl get pods&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; READY&amp;nbsp;&amp;nbsp; STATUS&amp;nbsp;&amp;nbsp;&amp;nbsp; RESTARTS&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;gossiprouter-6cfdc58df5-7jph4&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 21m&lt;br /&gt;sfc-5d6774b647-25tk5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 50s&lt;br /&gt;sfc-5d6774b647-sgxsk&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 50s&lt;br /&gt;sfc-5d6774b647-sjt9k&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 88s&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;This shows that we have 3 pods in SFC running.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Run the demo&lt;/h3&gt;So, now we can run RelayDemo to see if the virtual cluster across the two clouds is working correctly. To do this, we run a bash in one of the pods:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; kubectl get pods&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; READY&amp;nbsp;&amp;nbsp; STATUS&amp;nbsp;&amp;nbsp;&amp;nbsp; RESTARTS&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;gossiprouter-6cfdc58df5-7jph4&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 28m&lt;br /&gt;sfc-5d6774b647-25tk5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7m50s&lt;br /&gt;sfc-5d6774b647-sgxsk&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 7m50s&lt;br /&gt;sfc-5d6774b647-sjt9k&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 8m28s&lt;br /&gt;&amp;gt; kubectl exec -it sfc-5d6774b647-sgxsk bash&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;bash-4.4$&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The RelayDemo can be started with relay.sh:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;relay.sh -props sfc.xml -name Temp&lt;br /&gt;&lt;br /&gt;-------------------------------------------------------------------&lt;br /&gt;GMS: address=Temp, cluster=RelayDemo, physical address=10.16.1.6:7801&lt;br /&gt;-------------------------------------------------------------------&lt;br /&gt;View: [sfc-5d6774b647-sjt9k-37487|9]: sfc-5d6774b647-sjt9k-37487, sfc-5d6774b647-sgxsk-6308, sfc-5d6774b647-25tk5-47315, Temp&lt;br /&gt;:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;We can see that our cluster member named 'Temp' has joined the cluster.&lt;br /&gt;&lt;br /&gt;When we send a message, we can see that all 3 members of the (local) SFC cluster and the 5 members of the (remote) NYC cluster are replying (we're also getting a reply from self):&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;hello&lt;br /&gt;: &amp;lt;&amp;lt; response from sfc-5d6774b647-sgxsk-6308&lt;br /&gt;&amp;lt;&amp;lt; response from sfc-5d6774b647-sjt9k-37487&lt;br /&gt;&amp;lt;&amp;lt; response from sfc-5d6774b647-25tk5-47315&lt;br /&gt;&amp;lt;&amp;lt; hello from Temp&lt;br /&gt;&amp;lt;&amp;lt; response from Temp&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-5f4964d444-9v5dm-21647:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-5f4964d444-2ttfp-24388:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-5f4964d444-tm5h5-64872:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-5f4964d444-8622d-63103:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-5f4964d444-4lccs-4487:nyc&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The topology can be shown by typing 'topo' ('help' lists more commands):&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;: topo&lt;br /&gt;&lt;br /&gt;nyc&lt;br /&gt;&amp;nbsp; nyc-5f4964d444-9v5dm-21647 (192.168.26.87:7800) (me) // site master&lt;br /&gt;&amp;nbsp; nyc-5f4964d444-tm5h5-64872 (192.168.30.27:7800)&lt;br /&gt;&amp;nbsp; nyc-5f4964d444-2ttfp-24388 (192.168.53.43:7800)&lt;br /&gt;&amp;nbsp; nyc-5f4964d444-8622d-63103 (192.168.62.83:7800)&lt;br /&gt;&amp;nbsp; nyc-5f4964d444-4lccs-4487 (192.168.40.102:7800)&lt;br /&gt;&lt;br /&gt;sfc&lt;br /&gt;&amp;nbsp; sfc-5d6774b647-sjt9k-37487 (10.16.1.5:7800) (me) // site master&lt;br /&gt;&amp;nbsp; sfc-5d6774b647-sgxsk-6308 (10.16.1.6:7800)&lt;br /&gt;&amp;nbsp; sfc-5d6774b647-25tk5-47315 (10.16.0.10:7800)&lt;br /&gt;&amp;nbsp; Temp (10.16.1.6:7801)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This shows the members of both sites, plus their (internal) IP addresses and who the site masters are.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Dump the contents of the GossipRouters&lt;/h3&gt;This can be done via a utility program shipped with JGroups:&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;gt; java -cp jgroups.jar org.jgroups.tests.RouterStubGet -host 35.232.92.116 -cluster bridge&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;1: null:nyc, name=_nyc-5f4964d444-9v5dm-21647, addr=192.168.26.87:45275, server&lt;br /&gt;2: null:sfc, name=_sfc-5d6774b647-sjt9k-37487, addr=10.16.1.5:42812, server&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This shows the members of the bridge cluster, which registered with both GossipRouters.&lt;br /&gt;&lt;br /&gt;Alternatively, the other GossipRouter can be used, but it show list the same members.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Add firewall/ingress rules to make the GossipRouter publicly available&lt;/h3&gt;If the GossipRouters cannot be accessed by the above command, then there has to be a firewall/ingress rule to be added to allow ingress traffic to port 12001.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Cross-site replication&lt;/h3&gt;The RelayDemo sample application is very basic and not very useful by itself, but the setup can be used for other types of applications, e.g. &lt;b&gt;replication between data centers&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;If we have in-memory data in NYC, and use SFC as a backup for NYC (and vice versa), then a total loss of the NYC cluster will not lose all the data, but clients can be failed over to SFC and will continue to work with the data.&lt;br /&gt;&lt;br /&gt;This can be done for example by Red Hat Data Grid [6] and cross-site replication; as a matter of fact, all that needs to be done is to change the configuration, as explained in this post!&lt;br /&gt;&lt;br /&gt;As usual, send questions and feedback to the JGroups mailing list.&lt;br /&gt;&lt;br /&gt;Enjoy!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;[1] &lt;a href="https://github.com/belaban/JGroups/blob/master/src/org/jgroups/demos/RelayDemo.java"&gt;https://github.com/belaban/JGroups/blob/master/src/org/jgroups/demos/RelayDemo.java&lt;/a&gt; &lt;br /&gt;[2] &lt;a href="http://www.jgroups.org/manual4/index.html#Relay2Advanced"&gt;http://www.jgroups.org/manual4/index.html#Relay2Advanced&lt;/a&gt;&lt;br /&gt;[3] &lt;a href="http://www.jgroups.org/manual4/index.html#TUNNEL_Advanced"&gt;http://www.jgroups.org/manual4/index.html#TUNNEL_Advanced&lt;/a&gt;&lt;br /&gt;[4] &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html&lt;/a&gt;&lt;br /&gt;[5] &lt;a href="https://github.com/belaban/jgroups-docker/blob/master/yaml/gossiprouter.yaml"&gt;https://github.com/belaban/jgroups-docker/blob/master/yaml/gossiprouter.yaml&lt;/a&gt;&lt;br /&gt;[6] &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html/red_hat_data_grid_user_guide/x_site_replication"&gt;https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html/red_hat_data_grid_user_guide/x_site_replication&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6q23oPVKhqo" height="1" width="1" alt=""/&gt;</content><summary>In this (long!) post, I'll provide step-by-step instructions on how to create JGroups clusters in Google Kubernetes Engine (GKE) and Amazon (EKS) clusters, and connect them into one virtual cluster using RELAY2. Each local cluster is called a site. In this tutorial, we'll call the sites NYC and SFC. We'll start 5 nodes in NYC and 3 in SFC. The sample deployments and services are defined in YAML an...</summary><dc:creator>Bela Ban</dc:creator><dc:date>2019-12-31T09:01:00Z</dc:date><feedburner:origLink>http://belaban.blogspot.com/2019/12/spanning-jgroups-kubernetes-based.html</feedburner:origLink></entry><entry><title>Serverless Kafka on Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/17NkrRnh6tk/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-serverless_kafka_on_kubernetes</id><updated>2019-12-30T08:00:45Z</updated><published>2019-12-30T08:00:45Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;DevNation tech talks&lt;/a&gt; are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this presentation, you’ll learn about the serverless developer experience on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; with &lt;a href="https://developers.redhat.com/topics/serverless-architecture/"&gt;Knative&lt;/a&gt; and Apache Kafka from &lt;a href="https://developers.redhat.com/blog/author/mwessend/"&gt;Matthias Wessendorf&lt;/a&gt;.&lt;span id="more-661277"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/videos/youtube/CZhOJ_ysIiI/"&gt;Apache Kafka&lt;/a&gt; has emerged as a leading platform for building real-time data pipelines and for high-throughput/low-latency messaging. With its scalable and distributed design, Apache Kafka is a good fit for platforms like Kubernetes. Knative, on the other hand, is a Kubernetes-based platform that comes with a set of building blocks to build, deploy, and manage modern serverless workloads.&lt;/p&gt; &lt;p&gt;In this session, we will walk through an end-to-end demo, showing the lifecycle of an event-driven application based on Apache Kafka. You&amp;#8217;ll see how to hook up your serverless application to Apache Kafka and connect your service for processing incoming events.&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/bL9e1xt2TuA" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Join us at an upcoming&lt;a href="https://developers.redhat.com/events/"&gt; developer event&lt;/a&gt;, and see our collection of&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#38;linkname=Serverless%20Kafka%20on%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F30%2Fserverless-kafka-on-kubernetes%2F&amp;#038;title=Serverless%20Kafka%20on%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2019/12/30/serverless-kafka-on-kubernetes/" data-a2a-title="Serverless Kafka on Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/30/serverless-kafka-on-kubernetes/"&gt;Serverless Kafka on Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/17NkrRnh6tk" height="1" width="1" alt=""/&gt;</content><summary>DevNation tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this presentation, you’ll learn about the serverless developer experience on Kubernetes with Knative and Apache Kafka from Matthias Wessendorf. Apache Kafka has emerged as a leading platform for building real-time data ...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-12-30T08:00:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/30/serverless-kafka-on-kubernetes/</feedburner:origLink></entry></feed>
